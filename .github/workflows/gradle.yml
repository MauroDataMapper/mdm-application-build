
name: Java CI with Gradle

on:
    push:
        branches: [ "**" ]
    pull_request:
        branches: [ "**" ]

permissions:
    contents: read
    actions: read
    checks: write

jobs:
    build:

        runs-on: ubuntu-latest

        if: github.event.repository.fork == false

        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v3
              with:
                  cache-disabled: true

            - name: Core Gradle info
              run: |
                  ./gradlew -v
                  ./gradlew jvmArgs sysProps


            - name: Core Grails info
              run: |
                  ./grailsw -v

            - name: License header check
              run: |
                  ./gradlew license
                  
            - name: MegaLinter
              uses: oxsecurity/megalinter/flavors/ci_light@v7
              env:
                  # All available variables are described in documentation
                  # https://megalinter.io/configuration/
                  VALIDATE_ALL_CODEBASE: true
                  ENABLE_LINTERS: GROOVY_NPM_GROOVY_LINT
                  LINTER_RULES_PATH: 'config/codenarc'
                  DISABLE_ERRORS: true #Flag to have the linter complete with exit code 0 even if errors were detected.
                  SARIF_REPORTER: true


            - name: Send a stream message
              if: success() || failure()
              uses: zulip/github-actions-zulip/send-message@v1
              with:
                  api-key: ${{ secrets.ZULIP_API_KEY }}
                  email: "githubactionsbot-bot@maurodatamapper.zulipchat.com"
                  organization-url: "https://maurodatamapper.zulipchat.com"
                  to: "build/github-actions"
                  type: "stream"
                  topic: "${{github.repository}}"
                  content: "${{ job.status == 'success' && ':check_mark:' || ':cross_mark:' }} ${{github.repository}} : **${{github.ref}}**\nGitHub Actions build result: **${{ job.status }}**\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"